name: "TCS CLI SCAN IMAGE"

on:
  push:
  workflow_dispatch:

jobs:
  tcs-cli-scan-projects:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3.5.0
        with:
          fetch-depth: 0

      - name: Download TCS CLI
        run: |
          curl --request GET --url 'https://staging.tenable.com/downloads/api/v2/pages/tenable-cs/files/tenable.cs-cli_2.1.0-ebd9e6b-preview_Linux_x86_64.tar.gz' --output 'tcs.tar.gz'
          tar -xvf ./tcs.tar.gz tcs
          docker images

      - name: List Docker Images before
        run: docker images

      - name: Build Image
        run: |
          docker build -t nodejs-express:${{ github.sha }} .
      
      - name: List Docker Images after
        run: docker images

      - name: Scan Image with PROJECT 1
        run: |
          ./tcs scan -t=container-image --image=docker-daemon:nodejs-express:${{ github.sha }} --project=${{ secrets.TCS_PROJECT_ID }} --token=${{ secrets.TCS_TOKEN }} --appurl=${{ secrets.TCS_APP_URL }} --wait
      
      - name: Scan Image with PROJECT 2
        run: |
          ./tcs scan -t=container-image --image=docker-daemon:nodejs-express:${{ github.sha }} --project=${{ secrets.TCS_PROJECT_POLICY_ID }} --token=${{ secrets.TCS_TOKEN }} --appurl=${{ secrets.TCS_APP_URL }} --wait
      
      - name: Parse JSON and report
        run: |
          ls -lta report/tcs_image_scan_${{ secrets.TCS_PROJECT_ID }}.json
          jq '.images[].violations[]?.vulnerability' report/tcs_image_scan_${{ secrets.TCS_PROJECT_ID }}.json

          ls -lta report/tcs_image_scan_${{ secrets.TCS_PROJECT_POLICY_ID }}.json
          jq '.images[].violations[]?.vulnerability' report/tcs_image_scan_${{ secrets.TCS_PROJECT_POLICY_ID }}.json
